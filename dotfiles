#!/usr/bin/env bash
pushd `dirname $0` > /dev/null
export DOTFILES=`pwd`
popd > /dev/null

function is_ubuntu() {
    [[ "$(cat /etc/issue 2> /dev/null)" =~ Ubuntu ]] || return 1
}

function get_os() {
  # for os in ubuntu ec2 osx
  for os in ubuntu; do
    is_$os; [[ $? == ${1:-0} ]] && echo $os
  done
}

# Given strings containing space-delimited words A and B, "setdiff A B" will
# return all words in A that do not exist in B. Arrays in bash are insane
# (and not in a good way).
# From http://stackoverflow.com/a/1617303/142339
function setdiff() {
  local debug skip a b
  if [[ "$1" == 1 ]]; then debug=1; shift; fi
  if [[ "$1" ]]; then
    local setdiffA setdiffB setdiffC
    setdiffA=($1); setdiffB=($2)
  fi
  setdiffC=()
  for a in "${setdiffA[@]}"; do
    skip=
    for b in "${setdiffB[@]}"; do
      [[ "$a" == "$b" ]] && skip=1 && break
    done
    [[ "$skip" ]] || setdiffC=("${setdiffC[@]}" "$a")
  done
  [[ "$debug" ]] && for a in setdiffA setdiffB setdiffC; do
    echo "$a ($(eval echo "\${#$a[*]}")) $(eval echo "\${$a[*]}")" 1>&2
  done
  [[ "$1" ]] && echo "${setdiffC[@]}"
}

function install_dpkg() {
    rm /tmp/$1.deb
    echo "Downloading $1"
    wget -q $2 -O /tmp/$1.deb
    echo "Installing $1"
    sudo dpkg -i /tmp/$1.deb > /dev/null
}

function link_cmd() {
    echo "Link $2 -> $1"
    # Symbolic link to support cross filesystem linking.
    ln -sf "$1" "$2"
}

function copy_cmd() {
    echo "Copy $2"
    cp "$1" "$2"
}

function init_cmd() {
    echo "Executing $1"
    source "$1"
}

function system_cmd() {
    echo "Copy /$3/"
    sudo cp "$1" "/$3/"
}

function process_cmd() {
    cd $DOTFILES/$1/ && find . -type f | sort | while read filename
    do
        fullpath="$DOTFILES/$1/$filename"
        basepath=$(basename "$filename")
        dirpath=$(dirname "$filename")
        localdirpath="~/${dirpath}/"
        localdirpath="${localdirpath/#\~/$HOME}"
        localpath="$localdirpath$basepath"
        mkdir -p "$localdirpath"
        "$1_cmd" "$fullpath" "$localpath" "$dirpath"
    done
}

if [[ ! -L "~/.dotfiles" && -d "~/.dotfiles" ]]; then
    echo "Link $DOTFILES ~/.dotfiles"
    ln -s $DOTFILES ~/.dotfiles
fi

process_cmd "link"
process_cmd "copy"
process_cmd "system"
process_cmd "init"
